#THAT SCRIPT ONLY FOR 0 SHAPE KEYS AND 0 DRIVERS, USE "SCRIPT" FOR TRANSFER

import bpy

MESH_NAME = "Genesis 8 Female Mesh"

def cleanup(MESH_NAME):
    rig = bpy.context.active_object
    mesh = bpy.data.objects.get(MESH_NAME)

    if not rig or not mesh:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ä–∏–≥ –∏–ª–∏ –º–µ—à. –ü—Ä–æ–≤–µ—Ä—å –∏–º–µ–Ω–∞ –æ–±—ä–µ–∫—Ç–æ–≤.")
        return

    #–û–±–Ω—É–ª—è–µ–º —à–µ–π–ø –∫–µ–∏
    for shape in mesh.data.shape_keys.key_blocks:
        
        print(f"- {shape.name}: {shape.value}")
        if type(shape.value)==float:
            shape.value = 0.0
        elif type(shape.value)==int:
            shape.value = 0
        else:
            continue
    #–û–±–Ω—É–ª—è–µ–º –¥—Ä–∞–π–≤–µ—Ä–∞
    for prop_name, prop_value in rig.items():
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ (–Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å "_RNA_UI")
        if prop_name == "_RNA_UI":
            continue
                
        
        if type(rig[prop_name])==float:
            rig[prop_name] = 0.0
        elif type(rig[prop_name])==int:
            rig[prop_name] = 0
        else:
            continue
    
    bpy.context.view_layer.update()
        
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥—Ä–∞–π–≤–µ—Ä—ã
    for obj in bpy.data.objects:
        if obj.animation_data and obj.animation_data.drivers:
            for fcurve in obj.animation_data.drivers:
                fcurve.update()

    print("üéâ –ì–æ—Ç–æ–≤–æ! –í—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.")
    
cleanup(MESH_NAME)

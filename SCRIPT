import bpy

# –£–∫–∞–∂–∏ –∏–º–µ–Ω–∞ –æ–±—ä–µ–∫—Ç–æ–≤
MESH_NAME = "Genesis 8 Female Mesh"      # –∏–º—è –º–µ—à–∞, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–º–µ–Ω—ë–Ω Armature Modifier

def cleanup(rigpointer):
    rig = rigpointer
    mesh = bpy.data.objects.get(MESH_NAME)

    if not rig or not mesh:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ä–∏–≥ –∏–ª–∏ –º–µ—à. –ü—Ä–æ–≤–µ—Ä—å –∏–º–µ–Ω–∞ –æ–±—ä–µ–∫—Ç–æ–≤.")
        return

    #–û–±–Ω—É–ª—è–µ–º —à–µ–π–ø –∫–µ–∏
    for shape in mesh.data.shape_keys.key_blocks:
        
        print(f"- {shape.name}: {shape.value}")
        if type(shape.value)==float:
            shape.value = 0.0
        elif type(shape.value)==int:
            shape.value = 0
        else:
            continue
    #–û–±–Ω—É–ª—è–µ–º –¥—Ä–∞–π–≤–µ—Ä–∞
    for prop_name, prop_value in rig.items():
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ (–Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å "_RNA_UI")
        if prop_name == "_RNA_UI":
            continue

        if type(rig[prop_name])==float:
            rig[prop_name] = 0.0
        elif type(rig[prop_name])==int:
            rig[prop_name] = 0
        else:
            continue
    
    bpy.context.view_layer.update()
        
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥—Ä–∞–π–≤–µ—Ä—ã
    for obj in bpy.data.objects:
        if obj.animation_data and obj.animation_data.drivers:
            for fcurve in obj.animation_data.drivers:
                fcurve.update()

    print("üéâ –ì–æ—Ç–æ–≤–æ! –í—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.")

mesh = bpy.data.objects.get(MESH_NAME)

def save_shape_keys_from_rig(mesh_name):
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –æ–±—ä–µ–∫—Ç (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∏–≥)
    rig = bpy.context.active_object
    
    if not rig or rig.type != 'ARMATURE':
        print("–í—ã–±—Ä–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–∏–≥–æ–º.")
        return

    # –ü–æ–ª—É—á–∞–µ–º –º–µ—à –ø–æ –∏–º–µ–Ω–∏
    mesh_obj = bpy.data.objects.get(mesh_name)
    if not mesh_obj or mesh_obj.type != 'MESH':
        print(f"–û–±—ä–µ–∫—Ç —Å –∏–º–µ–Ω–µ–º '{mesh_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–µ—à–µ–º.")
        return
    
    #–û–±–Ω—É–ª—è–µ–º –≤—Å–µ —à–µ–π–ø –∫–µ–∏ –∏ –¥—Ä–∞–π–≤–µ—Ä–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –Ω–æ–≤—ã—Ö —à–µ–π–ø –∫–µ–µ–≤
    cleanup(rig)
    

    # –ò—â–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–∏–≥–∞
    armature_mod = None
    for mod in mesh_obj.modifiers:
        if mod.type == 'ARMATURE':
            armature_mod = mod
            break

    if not armature_mod:
        print(f"–£ –æ–±—ä–µ–∫—Ç–∞ '{mesh_name}' –Ω–µ—Ç –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —Ä–∏–≥–∞.")
        return

    # –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ü–µ–Ω—ã –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    def update_scene():
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥—Ä–∞–π–≤–µ—Ä—ã
        for obj in bpy.data.objects:
            if obj.animation_data and obj.animation_data.drivers:
                for fcurve in obj.animation_data.drivers:
                    fcurve.update()

    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Ä–∏–≥–∞
    for prop_name, value in rig.items():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ —á–∏—Å–ª–æ–≤–æ–µ
        if isinstance(value, (int, float)):
            print(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–æ–π—Å—Ç–≤–∞: {prop_name}")

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ 1.0
            if type(rig[prop_name])==float:
                rig[prop_name] = 1.0
            elif type(rig[prop_name])==int:
                rig[prop_name] = 1
            else:
                continue
            update_scene()

            # –í—ã–±–∏—Ä–∞–µ–º –º–µ—à
            bpy.context.view_layer.objects.active = mesh_obj
            mesh_obj.select_set(True)

            # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞–∫ shape key
            try:
                bpy.ops.object.modifier_apply_as_shapekey(
                    keep_modifier=True,
                    modifier=armature_mod.name
                )

                sk = mesh.data.shape_keys.key_blocks[-1]
                sk.name = prop_name

            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ '{prop_name}': {e}")

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ 0.0
            if type(rig[prop_name])==float:
                rig[prop_name] = 0.0
            elif type(rig[prop_name])==int:
                rig[prop_name] = 0
            update_scene()
    print("üéâ –ì–æ—Ç–æ–≤–æ! –í—Å–µ –¥—Ä–∞–π–≤–µ—Ä–∞ –∑–∞–ø–∏—Å–∞–Ω—ã!")

#–í—ã–∑–æ–≤
save_shape_keys_from_rig(MESH_NAME)
